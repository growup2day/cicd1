name: Deploy Changes to Selected Runner

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Select Branch to Deploy"
        required: true
        default: "main"
        type: choice
        options:
          - main
          - dev

jobs:
  deploy:
    runs-on: ${{ github.event.inputs.branch == 'main' && 'EC2AMAZ-5BQ8D0F' || 'EC2AMAZ-9UU0BV5' }}

    steps:
      - name: Print Selected Runner
        run: echo "Running on runner: ${{ runner.name }}"
        shell: powershell

      - name: Set Working Directory
        run: |
          Set-Location -Path "D:\bancslink_cicd"
        shell: powershell

      - name: Pull Latest Changes
        run: |
          git checkout ${{ github.event.inputs.branch }}
          git pull origin ${{ github.event.inputs.branch }}
        shell: powershell

      - name: Find Differences and Create ZIP
        run: |
          $previousCommit = git rev-parse HEAD~1
          $diffFiles = git diff --name-only $previousCommit HEAD
          $zipPath = "D:\bancslink_cicd\latestdiff.zip"

          if ($diffFiles) {
              Write-Output "Changes detected, creating ZIP..."
              $tempDiffFolder = "D:\temp_diff"
              Remove-Item -Recurse -Force $tempDiffFolder -ErrorAction SilentlyContinue
              New-Item -ItemType Directory -Path $tempDiffFolder -Force | Out-Null
              
              $diffFiles | ForEach-Object {
                  $destPath = "$tempDiffFolder\$_"
                  New-Item -ItemType Directory -Path (Split-Path $destPath) -Force | Out-Null
                  Copy-Item -Path "D:\bancslink_cicd\$_" -Destination $destPath -Force
              }

              Compress-Archive -Path "$tempDiffFolder\*" -DestinationPath $zipPath -Force
          } else {
              Write-Output "No changes detected, skipping ZIP creation."
          }
        shell: powershell

      - name: Unzip to Target Location
        run: |
          $zipPath = "D:\bancslink_cicd\latestdiff.zip"
          $unzipPath = "D:\target_location"

          if (Test-Path $zipPath) {
              Expand-Archive -Path $zipPath -DestinationPath $unzipPath -Force
              Write-Output "Unzipped files to target location."
          } else {
              Write-Output "No ZIP file found, skipping unzip step."
          }
        shell: powershell

      - name: Force Copy Files to Target Directory
        run: |
          $sourcePath = "D:\target_location"
          $destPath = "D:\existing_target"

          Get-ChildItem -Path $sourcePath -Recurse | ForEach-Object {
              $targetFile = $_.FullName.Replace($sourcePath, $destPath)
              $targetDir = Split-Path $targetFile -Parent

              if (!(Test-Path $targetDir)) {
                  New-Item -ItemType Directory -Path $targetDir -Force | Out-Null
              }

              Copy-Item -Path $_.FullName -Destination $targetFile -Force
          }

          Write-Output "Files copied successfully to target location."
        shell: powershell
