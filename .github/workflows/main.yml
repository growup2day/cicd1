name: Copy Changed Files to Destination

on:
  pull_request:
    branches:
      - pulltest
    types:
      - closed

jobs:
  sync_files:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'pulltest' && github.event.pull_request.head.ref == 'test'
    runs-on: [self-hosted, windows]
    defaults:
      run:
        shell: powershell

    steps:
      - name: Checkout pulltest branch
        uses: actions/checkout@v4
        with:
          ref: pulltest  # Ensure we check out the pulltest branch
          fetch-depth: 0

      - name: Verify Active Branch
        run: |
          $currentBranch = git branch --show-current
          Write-Host "Currently on branch: $currentBranch"
          if ($currentBranch -ne "pulltest") {
              Write-Host "Error: Not on pulltest branch!"
              exit 1
          }

      - name: Get Changed Files
        id: changed_files
        run: |
          # Get the changed files (added/modified only)
          $changedFiles = git diff --name-only --diff-filter=AM HEAD~1 HEAD

          if (-Not $changedFiles) {
              Write-Host "No changed files detected."
              echo "files=[]" | Out-File -FilePath $env:GITHUB_ENV -Append
              exit 0
          }

          Write-Host "Changed Files:"
          Write-Host $changedFiles

          # Convert to JSON-safe format
          $changedFilesArray = $changedFiles -split "r?n" | Where-Object { $_ -ne "" } | ConvertTo-Json -Compress

          Write-Host "GitHub Actions Output: $changedFilesArray"

          # Store in GitHub Environment for later use
          echo "files=$changedFilesArray" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Copy Changed Files
        run: |
          # Read destination path from pathvariable.txt
          $pathFile = "pathvariable.txt"
          if (-Not (Test-Path -Path $pathFile)) {
              Write-Host "Error: pathvariable.txt not found."
              exit 1
          }

          $content = Get-Content $pathFile
          $destinationPathLine = $content | Where-Object { $_ -like 'destination_path=*' }

          if (-Not $destinationPathLine) {
              Write-Host "Error: destination_path is not assigned in pathvariable.txt"
              exit 1
          }

          $destinationPath = $destinationPathLine.Split('=')[1].Trim()

          if ([string]::IsNullOrWhiteSpace($destinationPath)) {
              Write-Host "Error: destination_path is empty in pathvariable.txt"
              exit 1
          }

          Write-Host "Destination Path: $destinationPath"

          # Read the changed files from GitHub Environment
          $jsonString = "$env:files"

          if ($jsonString -eq "[]") {
              Write-Host "No changed files detected. Skipping copy."
              exit 0
          }

          # Parse JSON properly
          try {
              $files = $jsonString | ConvertFrom-Json
          } catch {
              Write-Host "Error: Failed to parse JSON. Raw Output: $jsonString"
              exit 1
          }

          # Ensure correct working directory
          $repoRoot = "$env:GITHUB_WORKSPACE"
          Set-Location -Path $repoRoot

          # Copy each changed file
          foreach ($file in $files) {
              $file = $file -replace '/', '\'
              $source = Join-Path -Path $repoRoot -ChildPath $file
              $destination = Join-Path -Path $destinationPath -ChildPath $file

              # Ensure the destination folder exists
              $destDir = Split-Path -Path $destination -Parent
              if (-Not (Test-Path -Path $destDir)) {
                  New-Item -ItemType Directory -Path $destDir -Force | Out-Null
              }

              # Copy the file
              if (Test-Path -Path $source) {
                  Copy-Item -Path $source -Destination $destination -Force
                  Write-Host "Copied: $file"
              } else {
                  Write-Host "Warning: Source file does not exist -> $source"
              }
          }

          Write-Host "File transfer completed successfully!"
